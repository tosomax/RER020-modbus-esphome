esphome:
  name: rer020
  friendly_name: RER020

esp32:
  board: esp32dev
  framework:
    type: esp-idf
  
# Enable logging
logger:

# Enable debug
debug:
  update_interval: 30s

# Enable Home Assistant API
api:
  encryption:
    key: XXXXXXX
  reboot_timeout: 0s

ota:
  - platform: esphome
    password: XXXXXX

wifi:
  ssid: !secret wifi_ssid2
  password: !secret wifi_password2
  use_address: rer020.local

# Define the RS485 bus
uart:
  id: rs485_uart
  tx_pin: GPIO17
  rx_pin: GPIO16
  baud_rate: 9600
  parity: NONE
  stop_bits: 1

modbus:
  id: modbus1
  disable_crc: False

modbus_controller:
- id: modbus_device
  address: 0x1   ## address of the Modbus slave device on the bus
  modbus_id: modbus1
  setup_priority: -10
  update_interval: 30s

button:
  - platform: restart
    name: "RER020 ESP32 Restart"


# Analog Input Registers – Read only (signed int, 16 bits) (funzione 04 read)
sensor:

  - platform: wifi_signal
    name: "WiFi Signal Sensor"
    update_interval: 60s
  - platform: uptime
    type: seconds
    name: Uptime Sensor
  - platform: debug
    free:
      name: "Heap Free"

  - platform: modbus_controller
    address: 0x0010
    register_type: read
    value_type: S_WORD  # Signed 16-bit integer
    name: "Temperatura Acqua"
    unit_of_measurement: "°C"
    accuracy_decimals: 1
    filters:
      - multiply: 0.1  # Scala il valore (es. 250 → 25.0°C)
    id: water_temperature

  - platform: modbus_controller
    address: 0x0012
    register_type: read
    value_type: S_WORD  # Signed 16-bit integer
    name: "Ventilatore mandata"
    unit_of_measurement: "%"
    accuracy_decimals: 0
    id: input_fan

  - platform: modbus_controller
    address: 0x0013
    register_type: read
    value_type: S_WORD  # Signed 16-bit integer
    name: "Ventilatore estrazione"
    unit_of_measurement: "%"
    accuracy_decimals: 0
    id: extraction_fan

  - platform: modbus_controller
    name: "tempo pulizia filtri"
    address: 0x0010
    register_type: holding
    value_type: S_WORD
    id: filter_cleaning_time

binary_sensor:

#Discrete Input Contacts – Read only (boolean, 1 bit) (funzione 02 read)

  # Clean Filters (Discrete Input 3)
  - platform: modbus_controller
    name: "Pulire Filtri"
    address: 0x0002
    register_type: discrete_input
    id: allarme_filtri

  # High Pressure Alarm (Discrete Input 13)
  - platform: modbus_controller
    name: "Allarme Alta Pressione"
    address: 0x000C
    register_type: discrete_input
    id: allarme_pressione

  # Dew point alarm (Discrete Input 17)
  - platform: modbus_controller
    name: "Allarme Dew Point"
    address: 0x0010
    register_type: discrete_input
    id: allarme_dew

  # Compressor Status (Discrete Input 18)
  - platform: modbus_controller
    name: "Stato Compressore"
    address: 0x0011
    register_type: discrete_input
    id: stato_compressore

#Discrete Output Coils – Read/Write (boolean, 1 bit) (unzione 15 write)

switch:

  - platform: modbus_controller
    name: "RER020 Accensione"
    address: 0x0000
    register_type: coil
    use_write_multiple: true  # Uses function 15 for writing
    id: unit_on_switch

  - platform: modbus_controller
    name: "Stagione"
    address: 0x0001
    register_type: coil
    use_write_multiple: true
    id: cambio_stagione

  - platform: modbus_controller
    name: "Reset Allarmi"
    address: 0x0003
    register_type: coil
    use_write_multiple: true
    id: reset_allarmi

  - platform: modbus_controller
    name: "Reset Pulizia Filtri"
    address: 0x0004
    register_type: coil
    use_write_multiple: true
    id: reset_pulizia_filtri

  - platform: modbus_controller
    name: "Abilitazione Forzatura Riscaldamento"
    address: 0x000B
    register_type: coil
    use_write_multiple: true
    id: abil_risc_raff

  - platform: modbus_controller
    name: "Forzatura Riscaldamento"
    address: 0x000C
    register_type: coil
    use_write_multiple: true
    id: forza_riscaldamento

  - platform: modbus_controller
    name: "Abilitazione Forzatura Deumidifica"
    address: 0x000E
    register_type: coil
    use_write_multiple: true
    id: abil_deumidifica

  - platform: modbus_controller
    name: "Forzatura Deumidifica"
    address: 0x000F
    register_type: coil
    use_write_multiple: true
    id: forza_deumidifica

  - platform: modbus_controller
    name: "Forzatura Ricircolo"
    address: 0x0010
    register_type: coil
    use_write_multiple: true
    id: forza_ricircolo

#Analog Output Holding Register – Read/Write (signed int, 16 bits) (funzione 16 write)
number:
  - platform: modbus_controller
    name: "Setpoint Ricambio Aria"
    address: 0x0002
    value_type: S_WORD  # Signed 16-bit integer
    min_value: 0
    max_value: 5
    step: 1
    use_write_multiple: true  # Uses Modbus function 16 for writing
    id: set_ricambio

  - platform: modbus_controller
    name: "Fase Taratura"
    address: 0x0063
    value_type: S_WORD
    min_value: 0
    max_value: 3
    step: 1
    use_write_multiple: true  # Uses Modbus function 16 for writing
    id: fase_taratura

  - platform: modbus_controller
    name: "Fase 1 Ventilatore Mandata Taratura"
    address: 0x0064
    value_type: S_WORD
    min_value: 12
    max_value: 100
    step: 1
    unit_of_measurement: "%"
    use_write_multiple: true  # Uses Modbus function 16 for writing
    id: fase1_mandata_set

  - platform: modbus_controller
    name: "Fase 2 Ventilatore Mandata Taratura"
    address: 0x0065
    value_type: S_WORD
    min_value: 12
    max_value: 100
    step: 1
    unit_of_measurement: "%"
    use_write_multiple: true  # Uses Modbus function 16 for writing
    id: fase2_mandata_set

  - platform: modbus_controller
    name: "Fase 2 Ventilatore Estrazione Taratura"
    address: 0x0066
    value_type: S_WORD
    min_value: 12
    max_value: 100
    step: 1
    unit_of_measurement: "%"
    use_write_multiple: true  # Uses Modbus function 16 for writing
    id: fase2_estrazione_set

  - platform: modbus_controller
    name: "Fase 3 Ventilatore Mandata Taratura"
    address: 0x0067
    value_type: S_WORD
    min_value: 12
    max_value: 100
    step: 1
    unit_of_measurement: "%"
    use_write_multiple: true  # Uses Modbus function 16 for writing
    id: fase3_mandata_set

  - platform: modbus_controller
    name: "Fase 3 Serranda Ricircolo Taratura"
    address: 0x0068
    value_type: S_WORD
    min_value: 0
    max_value: 100
    step: 1
    unit_of_measurement: "%"
    use_write_multiple: true  # Uses Modbus function 16 for writing
    id: fase3_serranda_set
